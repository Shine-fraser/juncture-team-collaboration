# -*- coding: utf-8 -*-
"""NLP  - CV and Resume Parsing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FfbEiNd16yTeHICMa6fJaiwLJR38cbSX
"""

!pip install spacy

!pip install PyMuPDF

import spacy
import pickle
import random

from google.colab import drive
drive.mount('/content/drive')

train_data = pickle.load(open('/content/drive/MyDrive/Resume-and-CV-Summarization-and-Parsing-with-Spacy-in-Python-master/train_data.pkl', 'rb'))

train_data[100]

nlp = spacy.blank('en')

def train_model(train_data):
  if 'ner' not in nlp.pipe_names:
    ner = nlp.create_pipe('ner')
    nlp.add_pipe(ner, last = True)

  for _, annotation in train_data:
    for ent in annotation['entities']:
      ner.add_label(ent[2])

  other_pipes = [pipe for pipe in nlp.pipe_names if pipe != 'ner']
  with nlp.disable_pipes(*other_pipes):
    optimizer = nlp.begin_training()
    for itn in range(10):
      print("Starting iteration" + str(itn))
      random.shuffle(train_data)
      losses = {}
      index = 0
      for text, annotations in train_data:
        try:
          nlp.update(
              [text],
              [annotations],
              drop = 0.2,
              sgd = optimizer,
              losses = losses)
        except Exception as e:
            pass
            print(text)

  
      print(losses)

train_model(train_data)

nlp.to_disk('data_analysis_model')

data_analysis_model = spacy.load('data_analysis_model')

train_data[0]

doc = data_analysis_model(train_data[0][0])
for ent in doc.ents:
  print(f'{ent.label_.upper():{30}}- {ent.text}')

import sys,fitz
fname='/content/drive/MyDrive/Resume-and-CV-Summarization-and-Parsing-with-Spacy-in-Python-master/Phone Pyae Sone Phyo- Doh Eain - resume.pdf'
doc=fitz.open(fname)
text=""
for page in doc:
  text = text + str(page.getText())

tx = " ".join(text.split('\n'))
print(text)

doc=data_analysis_model(tx)
print(doc)
for ent in doc.ents:
  print(f'{ent.label_.upper():{30}}-{ent.text}')

infile = open('/content/drive/MyDrive/Resume-and-CV-Summarization-and-Parsing-with-Spacy-in-Python-master/train_data.pkl','rb')
new_dict = pickle.load(infile)
print(type(new_dict))
harry = ('Sone Phyo', {'entities': [(1,2, 'something')]})
new_dict = new_dict[0] + harry

print(new_dict)
infile.close()

harry = ('Sone Phyo', {'entities': [(1,2, 'something')]})
 print(type(harry))

updatesonephyo = '/content/drive/MyDrive/Resume-and-CV-Summarization-and-Parsing-with-Spacy-in-Python-master/train_data.pkl'

updatesonephyo.append('sonephyo')